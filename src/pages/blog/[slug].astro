---
import PageLayout from '../../layouts/Page.astro';
import Container from '../../components/containers/Container.astro';
import { formatDate, slugify } from '../../utils/helpers';
import SharePost from '../../components/post/SharePost.astro';
import { Picture } from 'astro:assets';
import { getPosts, type Post } from '../../libs/post';

interface Props {
	post: Post;
}

export async function getStaticPaths() {
    const allPosts = await getPosts(undefined);
    const posts: Post[] = allPosts.filter(post => !post.personal);

    // map through the categories array
    return posts.map(post => ({
		params: { slug: post.slug },
		props: { post },
    }));
}

const { post } = Astro.props;
const { Content } = await post.render()

const seo = {
	title: post.title,
	// description: post.description,
	image: post.titleImage.src,
};
---

<PageLayout seo={seo}>
	<Container>
		<article class="post-content__article">
			<div class="post-content__top fade-in">
				{
					post.category && (
						<p class="post-content__category">
							<a
								href={`/blog/category/${slugify(post.category)}`}
							>
								{post.category}
							</a>
						</p>
					)
				}
				<h1 class="post-content__title">{post.title}</h1>
				<p class="post-content__date">
					<time>{formatDate(post.publishedAt)}</time>
				</p>
				<p class="post-content__minsread">
					<span>{post.minutesRead} read</span>
				</p>

				{
					post.titleImage && (
						<Picture
							src={post.titleImage}
                            alt={`Featured for ${post.title}`}
							formats={['webp', 'png']}
							class="post-content__img"
							loading="eager"
							width="1200"
							height="630"
						/>
					)
				}
			</div>
			<div class="post-content__content flow fade-in">
				<Content/>
			</div>
		</article>
		<SharePost postTitle={post.title} />
	</Container>
</PageLayout>

<style>
	.post-content__top {
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
	}

	.post-content__category {
		padding: 0.5rem 1rem;
		font-size: var(--step--1);
		background-color: var(--surface-1);
		border-radius: 2rem;
	}

	.post-content__category a {
		text-decoration: none;
	}

	.post-content__category a:hover {
		opacity: 0.8;
	}
	.post-content__article {
		padding: 5vh 2rem;
	}

	.post-content__title {
		margin: 1rem auto;
		max-width: 100%;
		font-size: var(--step-5);
	}

	.post-content__date {
		margin: 0 auto;
		font-size: var(--step--1);
		color: var(--c-light-gray);
	}

	.post-content__minsread {
		font-size: var(--step--2);
		color: var(--c-medium-gray);
	}

	.post-content__img {
		margin: 3rem 0 2rem 0;
		max-width: 100%;
		/* max-width: calc(40rem); */
		height: auto;
		border-radius: 0.5rem;
	}

	.post-content__content {
		font-size: var(--step--1);
		hyphens: auto;
		/* max-width: min(100%, 600px); */
		/* max-width: calc(40rem); */
	}

	.post-content__content :global(img) {
		display: block;
		margin: 2rem auto;
		width: 100%;
		object-fit: contain;
		max-width: 100%;
		border-radius: 0.5rem;
	}
	/* TODO: Change all medias to vars */
	@media (max-width: 640px) {
		.post-content__title {
			font-size: var(--step-3);
		}
	}
</style>
