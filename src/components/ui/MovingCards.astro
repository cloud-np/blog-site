---
interface Props {
    duration: number;
}
const { duration } = Astro.props;
---

<div class="wrapper">
    <div class="inner max-w-7xl">
        <section
            class="scroller-container flex min-w-full shrink-0 w-max flex-nowrap"
            style={{ "--duration": `${duration}ms` }}
        >
            <slot />
        </section>
    </div>
</div>

<script define:vars={{ duration }}>
    // TOOD: https://ui.aceternity.com/components/infinite-moving-cards
    // Translate the above from React to vanilla.
    function init() {
        const imagesContainer = document.getElementsByClassName("scroller-container")[0];
        if (!imagesContainer?.children) {
            return;
        }

        Array.from(imagesContainer.children).forEach((el) => {
            const clonedEl = el.cloneNode(true);
            imagesContainer.appendChild(clonedEl);
        });

        imagesContainer.addEventListener("mouseover", () => {
            imagesContainer.style.animationPlayState = 'paused';
        });

        imagesContainer.addEventListener("mouseout", () => {
            imagesContainer.style.animationPlayState = 'running';
        });
    }

	init();
	document.addEventListener("astro:after-swap", () => init());
    // imagesEl
</script>

<style>
    .wrapper {
        width: 100%;
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: row;
        overflow: hidden;
    }

    .scroller-container {
        position: relative;
        animation: swipe var(--duration) linear infinite forwards;
    }

    @keyframes swipe {
        0% {
            transform: translateX(0);
        }

        100% {
            transform: translate(calc(-50% - 0.5rem));
        }
    }
</style>
